import { GetServerSideProps } from "next"
import Head from "next/head"
import { useRouter } from "next/router"
import {
  Container,
  Divider,
  Stack,
  Input,
  FormControl,
  FormLabel,
  Textarea,
  Text,
} from "@chakra-ui/react"
import Header from "../../components/create/header"
import { useState, useEffect } from "react"
import { decode } from "js-base64"
import { getQueryDataOne } from "../../firebase/queryData"

export default function Create() {
  const router = useRouter()
  const { query: queryRouter } = router
  const { id: queryId } = queryRouter

  const [name, setName] = useState<string | undefined>("")
  const [description, setDescription] = useState<string | undefined>("")
  const [chain, setChain] = useState<string | undefined>("")
  const [category, setCategory] = useState<string | undefined>("")
  const [endpoint, setEndpoint] = useState<string | undefined>("")
  const [query, setQuery] = useState<string | undefined>("")
  const [creator, setCreator] = useState<string | undefined>("")

  useEffect(() => {
    if (!queryId) return
    const getData = async () => {
      const queryData = await getQueryDataOne(queryId)
      setName(queryData?.name)
      setDescription(queryData?.description)
      setChain(queryData?.chain)
      setCategory(queryData?.category)
      setEndpoint(queryData?.endpoint)
      setQuery(decode(queryData?.query || ""))
      setCreator(queryData?.creator)
    }

    getData()
  }, [queryId])

  return (
    <div>
      <Head>
        <title>Flex Node - Explore</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container
        minWidth="100vw"
        display="flex"
        alignItems="center"
        flexDirection="column"
      >
        <Header name={name} />
        <Divider width="80%" my="5" />
        <Stack width="80%" gap="2">
          <FormControl>
            <FormLabel fontWeight="bold">Description</FormLabel>
            <Text> - {description}</Text>
          </FormControl>
          <FormControl>
            <FormLabel fontWeight="bold">Chain</FormLabel>
            <Text> - {chain}</Text>
          </FormControl>
          <FormControl>
            <FormLabel fontWeight="bold">Category</FormLabel>
            <Text> - {category}</Text>
          </FormControl>
          <FormControl>
            <FormLabel fontWeight="bold">Endpoint</FormLabel>
            <Text> - {endpoint}</Text>
          </FormControl>
          <FormControl>
            <FormLabel fontWeight="bold">Query Command</FormLabel>
            <Textarea rows={12} value={query} />
          </FormControl>
          <FormControl>
            <FormLabel fontWeight="bold">Creator</FormLabel>
            <Text> - {creator}</Text>
          </FormControl>
        </Stack>
      </Container>
    </div>
  )
}
